{"ast":null,"code":"var _jsxFileName = \"/Users/stephburbank/Documents/Mobile Development/React-App-1/src/components/Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\n/**\n * Renders an array of strings passed in that can be filtered and added to as an\n * unordered list.\n * @returns Component\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar() {\n  _s();\n  //State which holds new menu item input\n  let [newMenuItem, setNewMenuItem] = useState(\"\");\n\n  //State which holds the list of menu items\n  let [menuItems, setMenuItems] = useState([\"Albert Eggstein\", \"Attila the Hen\", \"Dixie Chick\", \"Gregory Peck\", \"Mary Poopins\"]);\n\n  // let [menuItems, setMenuItems] = useState(initialMenuItems)\n  let [filter, setFilter] = useState(\"\");\n\n  // Adds a single string passed in as parameter to the state element\n  // \"menuItems\" that holds the set of current menu items.\n  let addMenuItem = useCallback(() => {\n    if (newMenuItem.trim() !== \"\") {\n      setMenuItems([newMenuItem, ...menuItems]);\n      setNewMenuItem(\"\");\n    }\n  }, [newMenuItem, menuItems]);\n\n  //Filter the menu items based on the text\n  const filteredItems = menuItems.filter(item => item.toLowerCase().includes(filter.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"newMenuItemValue\",\n      value: newMenuItem,\n      onChange: event => setNewMenuItem(event.target.value),\n      placeholder: \"Add a new menu item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMenuItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"filter\",\n      type: \"text\",\n      value: filter,\n      onChange: event => setFilter(event.target.value),\n      placeholder: \"Filter by...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) // Display each item as a list item\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Sidebar, \"z9yoFeXuhfyWfmx9I+EJY/ew7HI=\");\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useState","useCallback","Sidebar","newMenuItem","setNewMenuItem","menuItems","setMenuItems","filter","setFilter","addMenuItem","trim","filteredItems","item","toLowerCase","includes","event","target","value","map","index"],"sources":["/Users/stephburbank/Documents/Mobile Development/React-App-1/src/components/Sidebar.jsx"],"sourcesContent":["import { useState, useCallback } from \"react\";\n/**\n * Renders an array of strings passed in that can be filtered and added to as an\n * unordered list.\n * @returns Component\n */\nexport default function Sidebar() {\n  //State which holds new menu item input\n  let [newMenuItem, setNewMenuItem] = useState(\"\");\n\n  //State which holds the list of menu items\n  let [menuItems, setMenuItems] = useState([\n    \"Albert Eggstein\",\n    \"Attila the Hen\",\n    \"Dixie Chick\",\n    \"Gregory Peck\",\n    \"Mary Poopins\",\n  ]);\n\n  // let [menuItems, setMenuItems] = useState(initialMenuItems)\n  let [filter, setFilter] = useState(\"\");\n\n  // Adds a single string passed in as parameter to the state element\n  // \"menuItems\" that holds the set of current menu items.\n  let addMenuItem = useCallback(() => {\n    if (newMenuItem.trim() !== \"\") {\n      setMenuItems([newMenuItem, ...menuItems]);\n      setNewMenuItem(\"\");\n    }\n  }, [newMenuItem, menuItems]);\n\n  //Filter the menu items based on the text\n  const filteredItems = menuItems.filter((item) =>\n    item.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        id=\"newMenuItemValue\"\n        value={newMenuItem}\n        onChange={(event) => setNewMenuItem(event.target.value)}\n        placeholder=\"Add a new menu item\"\n      />\n      <br />\n\n      <button onClick={addMenuItem}>Add Item</button>\n      <br />\n\n      <input\n        id=\"filter\"\n        type=\"text\"\n        value={filter}\n        onChange={(event) => setFilter(event.target.value)}\n        placeholder=\"Filter by...\"\n      />\n      <br />\n      {/* Render the filtered menu items as an unordered list */}\n      <ul>\n        {filteredItems.map((item, index) => (\n          <li key={index}>{item}</li> // Display each item as a list item\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C;AACA;AACA;AACA;AACA;AAJA;AAKA,eAAe,SAASC,OAAO,GAAG;EAAA;EAChC;EACA,IAAI,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,IAAI,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,CACvC,iBAAiB,EACjB,gBAAgB,EAChB,aAAa,EACb,cAAc,EACd,cAAc,CACf,CAAC;;EAEF;EACA,IAAI,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA;EACA,IAAIS,WAAW,GAAGR,WAAW,CAAC,MAAM;IAClC,IAAIE,WAAW,CAACO,IAAI,EAAE,KAAK,EAAE,EAAE;MAC7BJ,YAAY,CAAC,CAACH,WAAW,EAAE,GAAGE,SAAS,CAAC,CAAC;MACzCD,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC,EAAE,CAACD,WAAW,EAAEE,SAAS,CAAC,CAAC;;EAE5B;EACA,MAAMM,aAAa,GAAGN,SAAS,CAACE,MAAM,CAAEK,IAAI,IAC1CA,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACP,MAAM,CAACM,WAAW,EAAE,CAAC,CAClD;EAED,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,MAAM;MACX,EAAE,EAAC,kBAAkB;MACrB,KAAK,EAAEV,WAAY;MACnB,QAAQ,EAAGY,KAAK,IAAKX,cAAc,CAACW,KAAK,CAACC,MAAM,CAACC,KAAK,CAAE;MACxD,WAAW,EAAC;IAAqB;MAAA;MAAA;MAAA;IAAA,QACjC,eACF;MAAA;MAAA;MAAA;IAAA,QAAM,eAEN;MAAQ,OAAO,EAAER,WAAY;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS,eAC/C;MAAA;MAAA;MAAA;IAAA,QAAM,eAEN;MACE,EAAE,EAAC,QAAQ;MACX,IAAI,EAAC,MAAM;MACX,KAAK,EAAEF,MAAO;MACd,QAAQ,EAAGQ,KAAK,IAAKP,SAAS,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAE;MACnD,WAAW,EAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAC1B,eACF;MAAA;MAAA;MAAA;IAAA,QAAM,eAEN;MAAA,UACGN,aAAa,CAACO,GAAG,CAAC,CAACN,IAAI,EAAEO,KAAK,kBAC7B;QAAA,UAAiBP;MAAI,GAAZO,KAAK;QAAA;QAAA;QAAA;MAAA,QAAa,CAAC;MAC7B;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GA5DuBjB,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}